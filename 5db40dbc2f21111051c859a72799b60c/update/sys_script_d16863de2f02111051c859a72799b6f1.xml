<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>cmdb_ci_outage</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>IT Assist GetOtgeNotif</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    var rm = new sn_ws.RESTMessageV2("ITAssistWorkbenchPing", "ITAssistWorkbenchPing");
	var itsm_temp = new GlideRecord("x_831378_kore_ai_0_itsm_config");
	itsm_temp.query();
	while (itsm_temp.next()) {
		var itsm_name = itsm_temp.name;
		var itsm_enc = itsm_temp.getElement("encrypted_val");
		var itsm_dec = itsm_enc.getDecryptedValue();
		rm.setStringParameterNoEscape(itsm_name, itsm_dec);	
	}
    function dateFormatter(value) {
        var date_time = value;
        var date = date_time.split(' ')[0];
        var time = (date_time.split(' ')[1]).replace(/:\d\d([ ap]|$)/, '$1');
        var gd = new GlideDate();
        gd.setValue(date);
        date = gd.getByFormat('dd/MM/yyyy');
        date_time = date + ' ' + time;
        return date_time;
    }
    var outage_type = current.getValue('type');
    var outage_service = current.getDisplayValue("cmdb_ci");
    var actions = [];
    var item = {
        "_id": current.sys_id.getDisplayValue(),
        "ticket": current.number.getDisplayValue(),
        "ticket_type": "OUTAGE",
        "body": current.message.getDisplayValue(),
        "target_type": "BROADCAST",
        "target_id": "broadcast",
        "system": "servicenow",
        "actions": actions,
		"created": current.sys_created_on.dateNumericValue()
    };
    if (outage_type === "planned") {
        if (current.getValue("end") !== "") {
            item.title = "There is a scheduled outage for " + outage_service + " from " + dateFormatter(current.getValue("begin")) + " to " + dateFormatter(current.getValue("end"));
        } else if (current.getValue("begin") !== "") {
            item.title = "There is a scheduled outage for " + outage_service + " from " + dateFormatter(current.getValue("begin"));
        } else {
            item.title = "There is a scheduled outage for " + outage_service;
        }
    } else if (outage_type === "degradation") {
        if (current.getValue("end") !== "") {
            item.title = outage_service + " may not work as expected from " + dateFormatter(current.getValue("begin")) + " to " + dateFormatter(current.getValue("end"));
        } else if (current.getValue("begin") !== "") {
            item.title = outage_service + " may not work as expected from " + dateFormatter(current.getValue("begin"));
        } else {
            item.title = outage_service + " may not work as expected";
        }
    } else if (outage_type === "outage") {
        if (current.getValue("end") !== "") {
            item.title = "There is an outage for " + outage_service + " from " + dateFormatter(current.getValue("begin")) + " to " + dateFormatter(current.getValue("end"));
        } else if (current.getValue("begin") !== "") {
			item.title = "There is an outage for " + outage_service + " from " + dateFormatter(current.getValue("begin"));
        } else {
            item.title = "There is an outage for " + outage_service;
        }
    } else {
        item.title = " ";
    }
    rm.setRequestBody(JSON.stringify({
        "notifications": [item]
    }));
    var response = rm.executeAsync();
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-22 19:00:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d16863de2f02111051c859a72799b6f1</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>IT Assist GetOtgeNotif</sys_name>
        <sys_overrides/>
        <sys_package display_value="ITSM Assist in ServiceNow" source="x_831378_kore_ai_0">5db40dbc2f21111051c859a72799b60c</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM Assist in ServiceNow">5db40dbc2f21111051c859a72799b60c</sys_scope>
        <sys_update_name>sys_script_d16863de2f02111051c859a72799b6f1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-11 22:23:49</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d16863de2f02111051c859a72799b6f1"/>
</record_update>
